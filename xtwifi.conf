#XTRA-T WiFi Project client core config file
#
#GENERAL DESCRIPTION
#This is used by client core
#
#Copyright (c) 2012 Qualcomm Atheros, Inc.
#All Rights Reserved.
#Qualcomm Atheros Confidential and Proprietary.

# OFF = 0, ERROR = 1, WARNING = 2, INFO = 3, DEBUG = 4, VERBOSE = 5, ALL = 100
DEBUG_GLOBAL_LOG_LEVEL = 0

# timeout, in seconds, for the server position request. default 30
TIMEOUT_SEC_SERVER_POSITION_REQUEST = 15

# timeout, in seconds, for the tile download request. default 30
TIMEOUT_SEC_TILE_DOWNLOAD_REQUEST = 30

# URL for the server position request. default http://sclesg06d:8061/uds/v2
#XT_SERVER_ROOT_URL = http://sclesg06d.qualcomm.com:8061/uds/v2
#XT_SERVER_ROOT_URL = http://sclesg06d.qualcomm.com:8060/uds/v2
#XT_SERVER_ROOT_URL = http://sclesgxt01.qualcomm.com:8092/uds/v2
XT_SERVER_ROOT_URL = http://sclesgxt01.qualcomm.com:8094/uds/v2

# 1: the position engine may use the cached WIFI scan if
# there is at least one AP in the cached scan whose max age is
# no older than TIME_SEC_MIN_AP_AGE_IN_CACHED_SCAN.
# 0: always request fresh scan
ENABLE_CACHED_WIFI_SCAN = 1
# age, in seconds, min age of AP's in the cached WiFi scan report.
# If all AP's age exceeds this limite, the cached result will
# not be used, a fresh wifi scan will be requested.
# This configuration item has no effect if ENABLE_CACHED_WIFI_SCAN is set to 0.
TIME_SEC_MIN_AP_AGE_IN_CACHED_WIFI_SCAN = 3
# age, in seconds, max age of AP's in a WiFi scan report. Age exceed
# this limit will be filtered out.
# This configuration item applies for requesting either fresh or cached scan.
TIME_SEC_MAX_AP_AGE_IN_WIFI_SCAN = 10

# number of times, retry limit for downloading the same tile. default 3
NUM_MAX_TILE_DOWNLOAD_RETRY_COUNT = 3

# time delay, in seconds, before we retry after a failed tile download. default 10
TIME_SEC_TILE_DOWNLOAD_RETRY_DELAY = 10

# full path for tile look up and storage. default "/data/misc/location/xtwifi"
# set this to "." for desktop builds
PATH_MAIN_DOWNLOAD_TILE_DIR = "/data/misc/location/xtwifi"

# if we should use fake wifi scanner to report a hard-coded MAC address
# only effective on android build. wifi scan is always fake for desktop builds
# value 0: (default) we are going to use the real wifi scanner on board.
# value non-zero: we are going to use the hard-coded MAC address
ENABLE_TEST_FAKE_WIFI_SCAN = 0

# server can specify age limitation on download suggestion, but we can choose to ignore it
# value 0: (default) we are going to use the age limitation given by server
# value non-zero: ignore whatever server tells us and use TIME_SEC_DEFAULT_DOWNLOAD_SUGGESTION_AGE instead
ENABLE_TEST_IGNORE_SERVER_DOWNLOAD_SUGGESTION_AGE = 0

# default time, in sec, of suggestion age limit, if server doesn't say anything. default 1800 sec (30min)
# this would be ignored if serevr does specify any age limit on URL suggestions
TIME_SEC_DEFAULT_DOWNLOAD_SUGGESTION_AGE = 10

# time, in sec, between cache re-evaluations. Cache re-evaluation is triggered by a couple of external
# events, and timer is one of them. default 600 sec (10 min)
TIME_SEC_CACHE_REEVALUATION_PERIOD = 3600

# max number of AP's observed for us to try local position resolution first, in the case of 1 cache hit
# default 2, which means if we can see more than 2 AP's, then merely 1 cache hit is suspicious
NUM_MAX_AP_OBSERVED_FOR_CACHE_HIT_TO_BE_ACCEPTED_1 = 2
# max number of AP's observed for us to try local position resolution first, in the case of 2 cache hits
# default 4, which means if we can see more than 4 AP's, then merely 2 cache hits are suspicious
NUM_MAX_AP_OBSERVED_FOR_CACHE_HIT_TO_BE_ACCEPTED_2 = 4
# max number of AP's observed for us to try local position resolution first, in the case of 3 cache hits
# default 5, which means if we can see more than 5 AP's, then merely 3 cache hits are suspicious
NUM_MAX_AP_OBSERVED_FOR_CACHE_HIT_TO_BE_ACCEPTED_3 = 5
# max number of AP's observed for us to try local position resolution first, in the case of 4 cache hits
# default 6, which means if we can see more than 6 AP's, then merely 4 cache hits are suspicious
NUM_MAX_AP_OBSERVED_FOR_CACHE_HIT_TO_BE_ACCEPTED_4 = 6
# max number of AP's observed for us to try local position resolution first, in the case of 5 cache hits
# default 7, which means if we can see more than 7 AP's, then merely 5 cache hits are suspicious
NUM_MAX_AP_OBSERVED_FOR_CACHE_HIT_TO_BE_ACCEPTED_5 = 7
# min hit ratio for us to try local position resolution first, in the case of more than 5 cache hits
# default 0.7, which means if we can see 10 AP's, then we only trust the cache if there are at least 7 hits
RATIO_MIN_CACHE_HIT_TO_BE_ACCEPTED = 0.7

# this IPC client would be notified on some verbose internal operation related information for either
# realtime display or post analysis
# default "", set it to "OperationalDataCollector" for the planned collector to work
OPERATIONAL_DATA_COLLECTOR = ""

# this is used at the server side to distinguish uploads from different maker/model
# default "Qualcomm"
OEM_ID_IN_REQUEST_TO_SERVER = "Qualcomm"

# this is used at the server side to distinguish uploads from different maker/model
# default "UNKNOWN"
MODEL_ID_IN_REQUEST_TO_SERVER = "UNKNOWN"

# this is the size/length of each 'bucket' for usage history,
# all usage history within the same time period is aggregated. default 6 hours (3600*6)
TIME_SEC_CACHE_RECORD_BUCKET_SIZE = 21600

# this is the oldest bucket we can keep and use for cache evaluation
# default 8 days (3600*24*8)
TIME_SEC_AGE_OLDEST_CACHE_RECORD_BUCKET = 691200

# any fix within this distance is considered as an 'adjacent' visit. default 0.05
RATIO_DISTANCE_TILE_OUTTER_RIM_ADJACENT = 0.1

# distance, in meters, to the final fix location for an AP to be considered as an outlier
# any AP shows up both in scan result and cache db, but is further away from the final fix
# is considered as an outlier. default 3000 meters
DISTANCE_METER_OUTLIER_RADIUS_IN_CACHE_LOG = 3000

# time period between saving cache log into file. default 5 min (60*5)
TIME_SEC_CACHE_LOG_SAVING_PERIOD = 3600

# total cache size on device. default 1MB (1048576)
SIZE_BYTE_TOTAL_CACHE = 5000000

# all download suggestions from server get this base utility score to start with, default 1000
RANK_SERVER_SUGGESTION_BASE = 100
FACTOR_DECAY_SERVER_SUGGESTION_BASE = 0.001

# for download suggestions describing a tile that is 'adjacent' to (estimated) current location
# we add this to the base utility score. Refer to RATIO_DISTANCE_TO_TILE_CENTER_AS_ADJACENT
# default 500
RANK_OFFSET_SERVER_SUGGESTION_PROXIMITY_BOOST = 900

# all existing tiles get this base utility score to start with, default 0
RANK_TILE_BASE = 0

# all 'freshly' downloaded tiles get this in addition to the base utility score. default 1000
# this is to reduce the chance that a newly downloaded tile got thrown away immediately
RANK_OFFSET_TILE_FRESH_BOOST = 1000

# time, in seconds, defines what 'fresh' means in RANK_OFFSET_TILE_FRESH
# default 1 hour (3600 seconds)
TIME_SEC_FRESH_TILE_AGE_SINCE_DOWNLOAD = 120

# boost if we're in or close to this tile
RANK_OFFSET_TILE_PROXIMITY_BOOST = 200

# max number of hits, per time bucket, that can be taken into calculation of the utility score
# this limits how much contribution this 'hit number' could do to the final score. default 100
NUM_MAX_VISITS_DIRECT_PER_BUCKET = 10
# the time decay factor of this 'hit number'. the larger this factor, the faster a hit in the past
# got forgotten. default 0.01
FACTOR_DECAY_NUM_VISITS_DIRECT = 0.002
# the scale factor of this 'hit number'. the larger this factor, the bigger a hit could contribute
# to the final score. default 100
FACTOR_SCALE_NUM_VISITS_DIRECT = 10

# max number of hits, per time bucket, that can be taken into calculation of the utility score
# this limits how much contribution this 'hit number' could do to the final score. default 100
NUM_MAX_VISITS_ADJACENT_PER_BUCKET = 10
# the time decay factor of this 'hit number'. the larger this factor, the faster a hit in the past
# got forgotten. default 0.01
FACTOR_DECAY_NUM_VISITS_ADJACENT = 0.002
# the scale factor of this 'hit number'. the larger this factor, the bigger a hit could contribute
# to the final score. default 100
FACTOR_SCALE_NUM_VISITS_ADJACENT = 2.5

# max number of hits, per time bucket, that can be taken into calculation of the utility score
# this limits how much contribution this 'hit number' could do to the final score. default 100
NUM_MAX_CONFIRMED_HITS_PER_BUCKET = 10
# the time decay factor of this 'hit number'. the larger this factor, the faster a hit in the past
# got forgotten. default 0.01
FACTOR_DECAY_NUM_CONFIRMED_HITS = 0.002
# the scale factor of this 'hit number'. the larger this factor, the bigger a hit could contribute
# to the final score. default 100
FACTOR_SCALE_NUM_CONFIRMED_HITS = 2.5

# max number of hits, per time bucket, that can be taken into calculation of the utility score
# this limits how much contribution this 'hit number' could do to the final score. default 100
NUM_MAX_UNCONFIRMED_HITS_PER_BUCKET = 10
# the time decay factor of this 'hit number'. the larger this factor, the faster a hit in the past
# got forgotten. default 0.01
FACTOR_DECAY_NUM_UNCONFIRMED_HITS = 0.01
# the scale factor of this 'hit number'. the larger this factor, the bigger a hit could contribute
# to the final score. default 100
FACTOR_SCALE_NUM_UNCONFIRMED_HITS = 0

# max number of outlier hits, per time bucket, that can be taken into calculation of the utility score
# this limits how much contribution this 'hit number' could do to the final score. default 100
NUM_MAX_OUTLIER_HITS_PER_BUCKET = 10
# the time decay factor of this 'hit number'. the larger this factor, the faster a hit in the past
# got forgotten. default 0.01
FACTOR_DECAY_NUM_OUTLIER_HITS = 0.01
# the scale factor of this 'hit number'. the larger this factor, the bigger a hit could contribute
# to the final score. default 100
FACTOR_SCALE_NUM_OUTLIER_HITS = 0

# max score, combined, a tile can get from all usage buckets
# default to 100
RANK_MAX_ADJ_DUE_TO_USAGE = 100

# max size, in bytes, of an existing tile that can be taken into calculation of the utility score
# this limits how much contribution tile size could do to the final score. default 1MB(1048576)
SIZE_BYTE_CAP_MAX_EXISTING_TILE = 1000000
# the size factor of an existing tile. the bigger a tile is, the higher utility score it tends to get
# this is because replacing this already downloaded tile could be more expensive. default 0.01
FACTOR_SCALE_EXISTING_TILE_SIZE = 0.00001

# max size, in bytes, of a tile download suggestion that can be taken into calculation of the utility score
# this limits how much contribution tile size could do to the final score. default 1MB(1048576)
SIZE_BYTE_CAP_MAX_SUGGESTION_TILE_SIZE = 1000000
# the size factor of a tile download suggestion. the bigger a tile is, the lower utility score it tends to get
# this is because downloading this tile could cost slightly more. default -0.001
FACTOR_SCALE_SUGGESTION_TILE_SIZE = -0.00001

# set to 1 and we'll dump the current tiles into debug log with utility score
# the log could grow pretty long for larger tile sets. default 0
ENABLE_TEST_DUMP_VERBOSE_TILE_LIST = 1

# Crowd sourcing related configuration items
#
# Without specify XT_CS_SERVER_ROOT_URL, it will be the same as the
# XT_SERVER_ROOT_DIR
# XT_CS_SERVER_ROOT_URL = http://sclesg06d.qualcomm.com:8061/uds/v2

# full path for tile look up and storage. default "/data/misc/location/xtwifi"
# only effective on android build. Always "." for desktop builds
PATH_MAIN_APDB_DIR = "/data/misc/location/xtwifi"
# When this configuration item is set to 1, every time phone boots up,
# all APDB will be saved into the backup folder, the existing files
# under the "apdb_backup" folder will be removed first prior to saving.
# The APDB backup folder will be located at the subfolder named
# "apdb_backup" under the existing apdb folder.
ENABLE_APDB_BACKUP = 0
# The APDB backup folder will be located at the subfolder named
# "apdb_backup" under the existing apdb folder.
PATH_BACKUP_APDB_DIR = "/data/misc/location/xtwifi/apdb_backup"

# Use server suggestion for crowd sourcing configuration
ENABLE_SERVER_SUGGESTION_FOR_CROWD_SOURCING = 1

# Maximum number of APs to be collected for upload
NUM_MAX_AP_PER_UPLOAD = 15000
# Number of minutes between upload: 8 hours
INTERVAL_MIN_UPLOAD = 480
# Number of minutes between forced upload: 5 days
INTERVAL_MIN_FORCED_UPLOAD = 7200
# Number of minutes between two consecutive upload on wlan: 10 min
INTERVAL_MIN_UPLOAD_THROTTLE = 10
# Number of additional minutes for upload via wlan before it bails out,
# only applies when INTERVAL_MIN_FORCED_UPLOAD is set to -1
# Default is 1 day (1440 min)
INTERVAL_MIN_UPLOAD_RETRY = 1440
# Timeout for forced upload: 30 seconds
TIMEOUT_SEC_SERVER_UPLOAD_REQUEST = 30

# The minimum time between two collected AP data sets in seconds
INTERVAL_SEC_AP_SETS_COLLECT = -1
# Timeout for scan interval when phone is on: 600 seconds (10 minute)
INTERVAL_SEC_SCAN = 600
# Timeout for scan interval when phone has not continusouly on for INTERVAL_MIN_SCAN
INTERVAL_MIN_FORCED_SCAN = 300
# Timeout for GNSS fix request: 60 seconds
TIMEOUT_SEC_GNSS_FIX_REQUEST = 60
# HEPE threshold for GNSS fix request
HEPE_THRESHOLD_METER_CS_LOCATION = 50.0

# 1: the crowd sourcing module may use the cached WIFI scan if
# there is at least one AP in the cached scan whose max age is
# no older than TIME_SEC_MIN_AP_AGE_IN_CS_CACHED_WIFI_SCAN.
# 0: always request fresh scan
ENABLE_CS_CACHED_WIFI_SCAN = 1
# age, in seconds, min age of AP's in the cached WiFi scan report.
# If all AP's age exceeds this limite, the cached result will
# not be used, a fresh wifi scan will be requested.
# This configuration item has no effect if ENABLE_CS_CACHED_WIFI_SCAN is set to 0.
TIME_SEC_MIN_AP_AGE_IN_CS_CACHED_WIFI_SCAN = 3
# Age, in seconds, max age of AP's in a WiFi scan report. Age exceed
# this limit will be filtered out.
# This configuration item applies for requesting either fresh or cached scan.
TIME_SEC_MAX_AP_AGE_IN_CS_WIFI_SCAN  = 10

# 0: do not use Tanimoto for data consolidation
# 1: Use DC Tanimono overlap
# 2: Use DC Tanimoto
USE_DC_TANIMOTO = 1
# The common AP ration, if the ration falls below the threshold,
# Tanimoto threshold will be ignored and AP will be uploaded.
SIMILARITY_THRESHOLD_COMMON_APS = 0.48
# Similarity threshold for Tanimoto overlap,
# Only applies when USE_DC_TANIMOTO is set to 1
SIMILARITY_THRESHOLD_TANIMOTO_OVERLAP = 0.96
# Similarity threshold for Tanimoto non-overlapping version,
# Only applies when USE_DC_TANIMOTO is set to 2
SIMILARITY_THRESHOLD_TANIMOTO = 0.2